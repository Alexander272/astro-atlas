basePath: /api
definitions:
  internal_planet_handlers.dataResponse:
    properties:
      count:
        type: integer
      data:
        type: object
    type: object
  internal_planet_handlers.idResponse:
    properties:
      id:
        type: string
    type: object
  internal_planet_handlers.response:
    properties:
      message:
        type: string
    type: object
  internal_user_handlers.dataResponse:
    properties:
      count:
        type: integer
      data:
        type: object
    type: object
  internal_user_handlers.idResponse:
    properties:
      id:
        type: string
    type: object
  internal_user_handlers.response:
    properties:
      message:
        type: string
    type: object
  models.CreatePlanetDTO:
    properties:
      age:
        type: number
      class:
        type: string
      dateOpened:
        type: integer
      description:
        type: string
      detectionMethod:
        type: string
      discoverer:
        items:
          type: string
        type: array
      name:
        type: string
      period:
        type: number
      radius:
        type: number
      speed:
        type: number
      systemId:
        type: string
      temperature:
        type: integer
      weight:
        type: number
    required:
    - name
    - systemId
    type: object
  models.CreateSystemDTO:
    properties:
      age:
        type: number
      class:
        type: string
      constellation:
        type: string
      distance:
        type: number
      magnitude:
        type: number
      metallicity:
        type: number
      name:
        type: string
      planetCount:
        type: integer
      radius:
        type: number
      temperature:
        type: integer
      weight:
        type: number
    required:
    - name
    - planetCount
    type: object
  models.CreateUserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  models.Planet:
    properties:
      age:
        type: number
      class:
        type: string
      dateOpened:
        type: integer
      description:
        type: string
      detectionMethod:
        type: string
      discoverer:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      period:
        type: number
      radius:
        type: number
      speed:
        type: number
      systemId:
        type: string
      temperature:
        type: integer
      weight:
        type: number
    type: object
  models.PlanetShort:
    properties:
      age:
        type: number
      class:
        type: string
      dateOpened:
        type: integer
      id:
        type: string
      name:
        type: string
      systemId:
        type: string
    type: object
  models.SignInUserDTO:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.System:
    properties:
      age:
        type: number
      class:
        type: string
      constellation:
        type: string
      distance:
        type: number
      id:
        type: string
      magnitude:
        type: number
      metallicity:
        type: number
      name:
        type: string
      planetCount:
        type: integer
      radius:
        type: number
      temperature:
        type: integer
      weight:
        type: number
    type: object
  models.SystemShort:
    properties:
      age:
        type: number
      class:
        type: string
      constellation:
        type: string
      distance:
        type: number
      id:
        type: string
      magnitude:
        type: number
      name:
        type: string
      planetCount:
        type: integer
    type: object
  models.Token:
    properties:
      accessToken:
        type: string
    type: object
  models.UpdatePlanetDTO:
    properties:
      age:
        type: number
      class:
        type: string
      dateOpened:
        type: integer
      description:
        type: string
      detectionMethod:
        type: string
      discoverer:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      period:
        type: number
      radius:
        type: number
      speed:
        type: number
      systemId:
        type: string
      temperature:
        type: integer
      weight:
        type: number
    type: object
  models.UpdateSystemDTO:
    properties:
      age:
        type: number
      class:
        type: string
      constellation:
        type: string
      distance:
        type: number
      id:
        type: string
      magnitude:
        type: number
      metallicity:
        type: number
      name:
        type: string
      planetCount:
        type: integer
      radius:
        type: number
      temperature:
        type: integer
      weight:
        type: number
    type: object
  models.UpdateUserDTO:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      newPassword:
        type: string
      oldPassword:
        type: string
      role:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Astro Atlas App
  title: Astro Atlas
  version: "0.1"
paths:
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: обновление токенов доступа
      operationId: refresh
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_user_handlers.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      summary: Refresh
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: вход в систему
      operationId: signIn
      parameters:
      - description: credentials
        in: body
        name: signIn
        required: true
        schema:
          $ref: '#/definitions/models.SignInUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_user_handlers.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      summary: Sign In
      tags:
      - auth
  /auth/sign-out:
    post:
      consumes:
      - application/json
      description: выход из системы
      operationId: signOut
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      summary: Sign Out
      tags:
      - auth
  /planets:
    get:
      consumes:
      - application/json
      description: Получение списка планет системы
      operationId: getPlanetList
      parameters:
      - description: system id
        in: query
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_planet_handlers.dataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PlanetShort'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      summary: Get Planet List
      tags:
      - planets
  /planets/:
    post:
      consumes:
      - application/json
      description: Создание планеты
      operationId: createPlanet
      parameters:
      - description: planet info
        in: body
        name: planet
        required: true
        schema:
          $ref: '#/definitions/models.CreatePlanetDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_planet_handlers.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Create Planet
      tags:
      - planets
  /planets/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление планеты
      operationId: deletePlanet
      parameters:
      - description: planet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Delete Planet
      tags:
      - planets
    get:
      consumes:
      - application/json
      description: Получение планеты
      operationId: getPlanetById
      parameters:
      - description: planet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_planet_handlers.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Planet'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      summary: Get Planet By Id
      tags:
      - planets
    patch:
      consumes:
      - application/json
      description: Обновление данных планеты
      operationId: updatePlanet
      parameters:
      - description: planet id
        in: path
        name: id
        required: true
        type: string
      - description: planet info
        in: body
        name: planet
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePlanetDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: updatePlanet
      tags:
      - planets
  /systems/:
    get:
      consumes:
      - application/json
      description: Получение списка планетных систем
      operationId: getSystemList
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_planet_handlers.dataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.SystemShort'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      summary: Get System List
      tags:
      - systems
    post:
      consumes:
      - application/json
      description: Создание планетной системы
      operationId: createSystem
      parameters:
      - description: system info
        in: body
        name: system
        required: true
        schema:
          $ref: '#/definitions/models.CreateSystemDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_planet_handlers.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Create System
      tags:
      - systems
  /systems/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление планетной системы
      operationId: deleteSystem
      parameters:
      - description: system id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Delete System
      tags:
      - systems
    get:
      consumes:
      - application/json
      description: Получение планетной системы
      operationId: getSystemById
      parameters:
      - description: system id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_planet_handlers.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.System'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      summary: Get System By Id
      tags:
      - systems
    patch:
      consumes:
      - application/json
      description: Обновление данных планетной системы
      operationId: updateSystem
      parameters:
      - description: system id
        in: path
        name: id
        required: true
        type: string
      - description: system info
        in: body
        name: system
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSystemDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_planet_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Update System
      tags:
      - systems
  /users:
    get:
      consumes:
      - application/json
      description: получение списка всех пользователей
      operationId: getAllUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_user_handlers.dataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Get All Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: создание пользователя
      operationId: createUser
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_user_handlers.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Create User
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: удаление пользователя
      operationId: deleteUser
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: получение данных пользователя
      operationId: getUserById
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/internal_user_handlers.dataResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Get User By Id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: обновление пользователя
      operationId: updateUser
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/internal_user_handlers.response'
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
